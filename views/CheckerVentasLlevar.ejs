<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>  
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>  
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
      crossorigin="anonymous"
    />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.debug.js" integrity="sha384-NaWTHo/8YCBYJ59830LTz/P4aQZK1sS0SneOgAvhsIl3zBu8r9RevNg5lHCHAuQ/" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/b1d1afb1da.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/assets/Style/desplegableStyle.css">
    <title>Document</title>
  </head>
  <body>
    <h1>HOLA Cajero(Ventas para llevar)</h1>
    <a href="/user/logout" class="label">Logout</a>
    <nav class="nav nav-conteiner">
      <ul class="list">
        <li class="list__item">
          <div class="list__button">
            <img src="/assets/images/dashboard.svg" class="list__img">
            <a href="/user/Checker" class="nav__link">Inicio</a>
          </div>
        </li>

        <li class="list__item">
          <div class="list__button">
            <img src="/assets/images/stats.svg" class="list__img">
            <a href="/user/CheckerVentasPresencial" class="nav__link">Mesas</a>
          </div>
        </li>

        <li class="list__item list__item--click">
          <div class="list__button list_button--click">
            <img src="/assets/images/bell.svg" class="list__img">
            <a href="#" class="nav__link">ventas</a>
            <img src="/assets/images/arrow.svg" class="list__arrow">
          </div>

          <ul class="list__show">
            <li class="list__inside">
              <a href="/user/CheckerVentas" class="nav__link nav__link--inside"> Web</a>
            </li>

            <li class="list__inside">
              <a href="/VentasLlevar" class="nav__link nav__link--inside"> Para llevar</a>
            </li>

            <li class="list__inside">
              <a href="/checkermesas" class="nav__link nav__link--inside"> Presencial</a>
            </li>
          </ul>
        </li>
        
        <li class="list__item">
          <div class="list__button">
            <img src="/assets/images/message.svg" class="list__img">
            <a href="/resumenVentas" class="nav__link">Resumen Ventas</a>
          </div>
        </li>
      </ul>
    </nav>
    <div class="table-container">
      <form action="" id="agregarVentaLlevar" method="post" action="/ventaLlevar">
        <div class="form-group form-inline">
          
          <input type="hidden" id="fechaHoraActual" name="fechaHoraActual" value="">
          <label for="representante">Tipo de venta:</label>
          <div style="width: 15%;">
            <select class="form-select" id="tipoDocumento">
              <option value="boleta">Boleta:</option>
              <option value="ruc">Factura:</option>
            </select>
          </div>
          <label for="representante" id="dniLabel" style="display: block;">Número de DNI</label>               
          <input class="form-control" type="number" name="DNI" id="dni" placeholder="DNI" style="display: block;" >
          <label for="representante" id="rucLabel" style="display: none;">Número de RUC</label>
          <input class="form-control" type="number" name="RUC" id="ruc" placeholder="RUC" style="display: none;" disabled>
          <div style="position: absolute;top: 9.4rem;left: 45rem;">
          <a  id="btnruc" class="btn btn-outline-primary m-4" style="display: inline-block;"><i class="fa-solid fa-magnifying-glass"></i></a>
          <div id="mensajeRucNoEncontrado"></div>
          </div>
        </div>
        <div class="form-group">
        <label for="representante">Nombres:</label>
        <input class="form-control" type="text" name="nombres" placeholder="Nombres" id="nombres" required> 
        </div>
        <div class="form-group">
        <label for="representante">Apellidos:</label>
        <input class="form-control" type="text" name="apellidos" placeholder="Apellidos" id="apellidos" required> 
        </div>
        <div class="form-group">
          <label for="telefono">Telefono</label>
          <input type="tel" class="form-control" id="telefono" placeholder="Telefono" name="telefono" >
        </div>
        
        <div class="form-group">
        <label for="representante">Direccion:</label>
        <input class="form-control" type="text" name="direccion" id="direccion" placeholder="Domicilio"> 
        <input type="hidden" name="detalle_pedido" id="detalle_pedido" value="<%= JSON.stringify(pedido_llevar) %>" >
        <input type="hidden" name="nombreCajero" id="nombreCajero" value=" <%= cajeroDatos.nombres %>" >
        </div>
        <br>
        <div class="form-group">
        <button class="btn btn-success" onclick="generarPDF()">
          Registrar
        </button>
        <button id="cancelarBoton1" class="btn btn-danger">
          Nueva venta
        </button>
        </div>
      </form>
    </div>
    <div id="menu" style="position: absolute;top: 10.5rem;left: 71rem;">           
      <button style="display: inline-block;" class="btn btn-success" onclick="Agregar()">Agregar Menú</button>
    </div>
    <br><br>
    <div class="table-container">
    <% let codVentaActual = null %>
    <% if (pedido_llevar) { %>
      <% pedido_llevar.forEach(function(pedido) { %>
        <% if (pedido.codventa !== codVentaActual) { %>
          <table value="<%= pedido.codventa %>">
            <h6>Detalle del pedido</h6> 
            <thead>
              <tr>
                <input type="hidden" name="" id="tipoventa" value="<%= pedido.tipoventa %>">
                <input type="hidden" name="" id="total" value="<%= pedido.preciototal %>">
                
                <th>Nombre Platillo</th>
                <th>Cantidad</th>
                <th>Precio</th>
                <th>
                  Sub Total:
                    <% if(pedido.estado==='1' || pedido.estado=='3'){ %>
                      Por preparar
                    <% } %>
                    <% if(pedido.estado==='2'){ %>
                      Preparado
                    <% } %>
                  </button>
                </th>
              </tr>
            </thead>
            <tbody>
              <% codVentaActual = pedido.codventa %>
        <% } %>
              <tr <% if (pedido.estadonuevo === '3') { %>class="fila-roja"<% } %>>
                <td><%= pedido.codplatillo %></td>
                <td><%= pedido.cantidad %></td>
                <td><%= pedido.precio %></td>
                <td>= <%= (pedido.cantidad*pedido.precio)%> S/</td>
              </tr>
        <% }); %>
          </tbody>
        </table>
    <% } %>
    </div>
    <script>
      // Obtener el elemento del campo de entrada oculto
      const inputFechaHoraActual = document.getElementById("fechaHoraActual");

      // Obtener la fecha y hora actual
      const fechaHoraActual = new Date();

      // Formatear la fecha y hora en un formato deseado
      const formatoFechaHora = `${fechaHoraActual.getFullYear()}-${(fechaHoraActual.getMonth() + 1).toString().padStart(2, "0")}-${fechaHoraActual.getDate().toString().padStart(2, "0")} ${fechaHoraActual.getHours().toString().padStart(2, "0")}:${fechaHoraActual.getMinutes().toString().padStart(2, "0")}:${fechaHoraActual.getSeconds().toString().padStart(2, "0")}`;

      // Asignar la fecha y hora al campo de entrada oculto
      inputFechaHoraActual.value = formatoFechaHora;
      document.getElementById('cancelarBoton1').addEventListener('click',async () => {
          console.log('eres gei');
          const response = await axios.post('/pedidoLlevar', {
              estado_tabla:0,
          });
          Swal.fire('Modificado!', '', 'success');
          setTimeout(function () {
              location.reload();
          }, 1000);
      });

      document.getElementById('btnruc').addEventListener('click', async (event) => {
        document.getElementById('direccion').value = '';
        document.getElementById('nombres').value = '';
        document.getElementById('apellidos').value = '';
        const dni = document.getElementById("dni").value;
        const ruc = document.getElementById("ruc").value;
        const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImJhcnJlcml0YV9yb21lcm9AaG90bWFpbC5jb20ifQ.5sH-f-HlBuJvJNaNE6PXpa62-BqUnsofT0fZHxdOUPU';
        let url = `https://dniruc.apisperu.com/api/v1/ruc/${ruc}?token=${token}`;
          if(dni===""){
            url = `https://dniruc.apisperu.com/api/v1/ruc/${ruc}?token=${token}`;
            try {
              // Realizar la solicitud a la API para obtener los datos del proveedor según el RUC
              const response = await axios.get(url);
              const datosProveedor = response.data;
              console.log(datosProveedor)
              if (datosProveedor.success!=false) {
                // RUC encontrado
                document.getElementById('mensajeRucNoEncontrado').innerHTML = ''; // Limpiar el mensaje de RUC no encontrado
                if (datosProveedor.direccion!=null) {
                  document.getElementById('direccion').value = datosProveedor.direccion;
                  document.getElementById('direccion').readOnly = true;
                  document.getElementById('nombres').value = datosProveedor.razonSocial;
                  document.getElementById('nombres').readOnly = true;
                }else{
                  document.getElementById('nombres').value = datosProveedor.razonSocial;
                  document.getElementById('direccion').readOnly = false;
                }
                
                
                // Resto del código para llenar los campos y demás acciones
              } else {
                // RUC no encontrado
                document.getElementById('mensajeRucNoEncontrado').innerHTML = "<p style='color: red; font-weight: bold; margin-top: 10px;'>RUC no encontrado</p>";
              }
                // Llenar los campos con los datos del proveedor
              
            } catch (error) {
              document.getElementById('mensajeRucNoEncontrado').innerHTML = "<p style='color: red; font-weight: bold; margin-top: 10px;'>RUC no encontrado</p>";
              // Manejar el error de acuerdo a tus necesidades
            }
          }else{
            url = `https://dniruc.apisperu.com/api/v1/dni/${dni}?token=${token}`;
            try {
              // Realizar la solicitud a la API para obtener los datos del proveedor según el RUC
              const response = await axios.get(url);
              const datosProveedor = response.data;
              console.log(datosProveedor)
              if (datosProveedor.success!=false) {
                // RUC encontrado
                document.getElementById('mensajeRucNoEncontrado').innerHTML = ''; // Limpiar el mensaje de RUC no encontrado
                if (datosProveedor.nombres!=null) {
                  document.getElementById('nombres').value = datosProveedor.nombres;
                  document.getElementById('nombres').readOnly = true;
                  document.getElementById('apellidos').value = datosProveedor.apellidoPaterno+" "+datosProveedor.apellidoMaterno;
                  document.getElementById('apellidos').readOnly = true;
                }else{
                  document.getElementById('nombres').value = datosProveedor.nombres;
                  document.getElementById('direccion').readOnly = false;
                }
                
                
                // Resto del código para llenar los campos y demás acciones
              } else {
                // RUC no encontrado
                document.getElementById('mensajeRucNoEncontrado').innerHTML = "<p style='color: red; font-weight: bold; margin-top: 10px;'>DNI NO ENCONTRADO</p>";
              }
                // Llenar los campos con los datos del proveedor
              
            } catch (error) {
              document.getElementById('mensajeRucNoEncontrado').innerHTML = "<p style='color: red; font-weight: bold; margin-top: 10px;'>DNI NO ENCONTRADO</p>";
              // Manejar el error de acuerdo a tus necesidades
            }
          }
      });

      document.getElementById('agregarVentaLlevar').addEventListener('submit', async (event) => {
          event.preventDefault();
          const form = event.target;
          const formData = new FormData(form);
          const formValues = Object.fromEntries(formData.entries());
          try {
            Swal.fire('Venta Realizada!', '', 'success');
            setTimeout(function () {
              location.reload();
            }, 1000);
            const response = await axios.post('/ventaLlevar', formValues);
            console.log("entro al post?")
          } catch (error) {
            Swal.fire('Error', 'No ha seleccionado platillos del MENU', 'error');
          }
        });

    </script>
    <script>
      async function generarPDF() {
        try {
          // Captura los valores de los campos del formulario
          let ventaDataResponse  = await axios.get(`/ultimoCodventa`);
          const ventaData = ventaDataResponse.data;
          console.log(ventaData, "venta total");
          const nombre = document.getElementById("nombres").value;
          const apellidos = document.getElementById("apellidos").value;
          const celular = document.getElementById("telefono").value;
          const dni = document.getElementById("dni").value;
          const ruc = document.getElementById("ruc").value;
          let documento;
          if(dni===""){
            documento= "RUC: "+ ruc;
          }else{
            documento= "DNI: "+dni;
          }
          const tipoventa = 'paraLlevar';
          const detalle_pedidoString  = document.getElementById("detalle_pedido").value;
          const detalle_pedido=  JSON.parse(detalle_pedidoString);
          const direccion = document.getElementById("direccion").value;
          /* const nombreCajero = document.getElementById("nombrecajero").value;
          const apellidoCajero = document.getElementById("apellidocajero").value;
          const dnicajero = document.getElementById("dnicajero").value;
          console.log(nombreCajero,apellidoCajero,dnicajero, "nombre del cajero"); */
          let total = 0;
          const codventa= ventaData[0].codventa + 1;
          const fechahora = document.getElementById("fechaHoraActual").value;
          // Función para convertir dígitos numéricos a palabras en español
          function convertirNumeroAPalabras(numero) {
            const unidades = ["", "uno", "dos", "tres", "cuatro", "cinco", "seis", "siete", "ocho", "nueve"];
            const especiales = ["diez", "once", "doce", "trece", "catorce", "quince", "dieciséis", "diecisiete", "dieciocho", "diecinueve"];
            const decenas = ["", "", "veinte", "treinta", "cuarenta", "cincuenta", "sesenta", "setenta", "ochenta", "noventa"];

            if (numero < 10) {
              return unidades[numero];
            } else if (numero < 20) {
              return especiales[numero - 10];
            } else if (numero < 100) {
              const unidad = numero % 10;
              const decena = Math.floor(numero / 10);
              if (unidad === 0) {
                return decenas[decena];
              } else {
                return decenas[decena] + " y " + unidades[unidad];
              }
            } else {
              return "";
            }
          }

          // Convertir el número total a palabras en español

          console.log(total,"total de la venta",fechahora);
          const doc = new jsPDF({
              format: "a6",
          });
          doc.setFont("times");
          doc.setFontSize(10);
          // Agrega los datos al documento PDF
          doc.text(`KENTAKITO`, 40, 5);
          doc.setFontSize(9);
          doc.text(`DE: PINEDO IZUIZA DEYBITH`, 28, 8);
          doc.setFontSize(8);
          doc.text(`URB. FONAVI MANZANA B LOTE 7`, 27, 11);
          doc.text(`Dirección Empresa: jr. Leoncio prado 1189`, 26, 14);
          doc.setFontSize(7);
          doc.text(`Numeros de celular: 986363913 / 961324321`, 27, 17);
          doc.setFontSize(6);
          doc.text(`RUC: 10443831113`, 40, 20);
          doc.setFontSize(10);
          doc.text(`----------------------------------------------------------------------------------`, 5, 22); 
          doc.text(`BOLETA ELECTRÓNICA B001-${codventa}`, 25 , 26);
          doc.text(`----------------------------------------------------------------------------------`, 5, 30); 
          doc.text(`Fecha: ${fechahora}`, 5, 33);
          doc.text(`Nombre: ${nombre}`, 5, 36);
          doc.text(`Apellidos: ${apellidos}`, 5, 39);
          doc.text(`Celular: ${celular}`, 5, 42);
          doc.text(`${documento}`, 5, 45);
          doc.text(`Tipo de venta: ${tipoventa}`, 5, 48);
          doc.text(`Dirección: ${direccion}`, 5, 51);
          doc.text(`DESCRIPCION` , 5 , 61);
          doc.text(`----------------------------------------------------------------------------------`, 5, 64);
          doc.text(`Producto`, 5,70 );
          doc.text(`Cantidad`, 45,70 );
          doc.text(`Precio Unitario`, 60,70 );
          doc.text(`Importe`, 85,70 );
          let y=75;
          let x=5;
          detalle_pedido.forEach((producto) => {
            const titulo = producto.nombre;
            const precio = producto.precio;
            const cantidad = producto.cantidad;
            const importe = cantidad*precio;
            total= total+importe;
            doc.text(`${titulo}`, x, y);
            doc.text(`${cantidad}`, x+ 45, y);
            doc.text(`${precio} soles`, x+55, y);
            doc.text(`${importe} soles`, x+80, y);
            y += 5;
          });
          const totalTexto = convertirNumeroAPalabras(total) + " soles";
          doc.text(`----------------------------------------------------------------------------------`, 5, y);
          doc.text(`SUB TOTAL`, 40, y+5);
          doc.text(`S/`, 70, y+5);
          doc.text(`${total}`, 84, y+5);
          doc.text(`DESCUENTO`, 40, y+8);
          doc.text(`S/`, 70, y+8);
          doc.text(`0.00`, 86, y+8);
          doc.text(`INAFECTA`, 40, y+11);
          doc.text(`S/`, 70, y+11);
          doc.text(`0.00`, 86, y+11);
          doc.text(`IGV (18%)`, 40, y+14);
          doc.text(`S/`, 70, y+14);
          doc.text(`0.00`, 86, y+14);
          doc.text(`ICBPER`, 40, y+17);
          doc.text(`S/`, 70, y+17);
          doc.text(`0.00`, 86, y+17);
          doc.text(`TOTAL`, 40, y+20);
          doc.text(`S/`, 70, y+20);
          doc.text(`${total}`, 84, y+20);
          doc.text(`----------------------------------------------------------------------------------`, 5, y+23);
          doc.text(`SON: ${totalTexto}`, 5, y+26);
          doc.text(`----------------------------------------------------------------------------------`, 5, y+30);
          doc.text(`Gracias por su preferencia`, 30, y+33);
          doc.setFontSize(8);
          doc.text(`Bienes transferidos en la amazonía`, 28, y+36);
          doc.text(`Para ser consumidos en la misma`, 30, y+39);
          doc.text(`© 2023 Kentakitos Hamburguer`, 30, y+42);
          // Descarga el documento PDF
          doc.save("compra.pdf", { autoDownload: true });
          } catch (error) {
          console.error(error);
        }
      }
    </script>
    

    
    <script>
      async function Agregar() {
        plato = await axios.get(`/waiterPlatillo`);
        const platos=plato.data;
        console.log(platos);
        Swal.fire({
          title: 'Registrar Platillos',
          showCancelButton: false,
          showConfirmButton: false,
          html: `
            <form id="agregarUsuarioForm" method="post" action="/pedidoLlevar">
              <input type="hidden" name="estadoBoton" value="0">
              <div id="platos-container" class="form-group" >
                <!-- Los campos de los platos se generarán aquí -->
              </div>
              <br/>
              <button type="submit" class="submit" style="background-color: #4CAF50; border: none; color: white; padding: 10px 24px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; border-radius: 5px; cursor: pointer;" id="registrarBoton">Registrar</button>
              <a href="#" class="cancel" style="background-color: #d33; border: none; color: white; padding: 10px 24px; text-align: center; text-decoration: none; display: inline-block; font-size: 16px; border-radius: 5px; cursor: pointer; margin-left: 10px;" id="cancelarBoton">Cancelar</a>
            </form>
          `
        });

        // Generar campos para cada platillo
        const platosContainer = document.getElementById('platos-container');
        platos.forEach((platillo, index) => {
          const inputName = `platillo${index + 1}`;
          const inputPrecioName = `precio${index + 1}`;
          const inputCantidadName = `cantidad${index + 1}`;
          const checkboxId = `platillo-checkbox${index + 1}`;

          const div = document.createElement('div');
          div.classList.add('form-group');

          const checkbox = document.createElement('input');
          checkbox.type = 'checkbox';
          checkbox.id = checkboxId;
          checkbox.name = 'platillo';
          checkbox.value = platillo.codplatillo; //obtienes el valor del código del platillo

          const label = document.createElement('label');
          label.htmlFor = checkboxId;
          label.textContent = platillo.nombre;
          label.name = 'platillos';
          label.value = platillo.nombre;

          const inputCantidad = document.createElement('input');
          inputCantidad.type = 'number';
          inputCantidad.id = inputCantidadName;
          inputCantidad.name = 'cantidades'; //obtienes el valor de las cantidades del platillo que ha seleccionado
          inputCantidad.placeholder = 'Cantidad';
          inputCantidad.required = false;
          inputCantidad.disabled = true; // Deshabilitar los campos de cantidad inicialmente

          const labelPrecio = document.createElement('label');
          labelPrecio.htmlFor = inputPrecioName;
          labelPrecio.textContent = 'Precio';

          const inputPrecio = document.createElement('input');
          inputPrecio.type = 'text';
          inputPrecio.id = inputPrecioName;
          inputPrecio.name = 'precios';
          inputPrecio.value = platillo.precio; //obtienes los precios de los platillos seleccionados
          inputPrecio.disabled = true; // Deshabilitar los campos de cantidad inicialmente

          const botonMas = document.createElement('button')

          div.appendChild(checkbox);
          div.appendChild(label);
          div.appendChild(document.createElement('br'));
          div.appendChild(inputCantidad);
          div.appendChild(document.createElement('br'));
          div.appendChild(labelPrecio);
          div.appendChild(inputPrecio);

          platosContainer.appendChild(div);

          // Habilitar/deshabilitar el campo de cantidad según la selección del checkbox
          checkbox.addEventListener('change', (event) => {
            inputCantidad.disabled = !event.target.checked;
            inputPrecio.disabled = !event.target.checked;
          });
        });
        
        
        document.getElementById('agregarUsuarioForm').addEventListener('submit', async (event) => {
          event.preventDefault();
          const form = event.target;
          const formData = new FormData(form);
          try {
            Swal.fire('Modificado!', '', 'success');
            setTimeout(function () {
              location.reload();
            }, 1000);
            const response = await axios.post('/pedidoLlevar', {
              estado_tabla:1,
              platillo: Array.from(formData.getAll('platillo')),
              cantidades: Array.from(formData.getAll('cantidades')),
              precios: Array.from(formData.getAll('precios'))
            });
            
            console.log(response);
          } catch (error) {
            Swal.fire('Error', 'Ha ocurrido un error al enviar el formulario', 'error');
          }
        });

        document.getElementById('cancelarBoton').addEventListener('click', () => {
          Swal.close();
        });
      }
    </script>
    <script src="/assets/scripts/desplegable.js"></script>
    <script>
      const tipoDocumentoSelect = document.getElementById("tipoDocumento");
      const dniLabel = document.getElementById("dniLabel");
      const dniInput = document.getElementById("dni");
      const rucLabel = document.getElementById("rucLabel");
      const rucInput = document.getElementById("ruc");

      tipoDocumentoSelect.addEventListener("change", function() {
        if (tipoDocumentoSelect.value === "boleta") {
          dniLabel.style.display = "block";
          dniInput.style.display = "block";
          rucLabel.style.display = "none";
          rucInput.style.display = "none";
          dniInput.disabled= false;
          rucInput.disabled= true;
          dniInput.required = true;
          rucInput.required = false;
          rucInput.value = "";
        } else if (tipoDocumentoSelect.value === "ruc") {
          dniLabel.style.display = "none";
          dniInput.style.display = "none";
          rucLabel.style.display = "block";
          rucInput.style.display = "block";
          dniInput.required = false;
          rucInput.required = true;
          rucInput.disabled=false;
          dniInput.disabled=true;
          dniInput.value = "";
        }
      });
    </script>
    
  </body>
</html>